# Default values for pgrok.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/pschichtel/pgrok
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 22
  loadBalancerIP: null
  externalTrafficPolicy: null
  annotations: {}

resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

livenessProbe:
  tcpSocket:
    port: ssh
readinessProbe:
  tcpSocket:
    port: ssh

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

pgrok:
  hostKeys:
    ecdsa: ""
    ed25519: ""
    rsa: ""
  domainSuffix: '.example.org'
  users: {}
  ingressClassName: null
  templates:
    service: |
      apiVersion: v1
      kind: Service
      metadata:
        name: dummy
        labels: {}
      spec:
        type: ClusterIP
        ports: []
        selector:
          {{- include "pgrok.selectorLabels" . | nindent 4 }}
    ingress: |
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: dummy
        labels: {}
        annotations: {}
      spec:
        {{- with .Values.pgrok.ingressClassName }}
        ingressClassName: {{ . }}
        {{- end }}
        rules: []
